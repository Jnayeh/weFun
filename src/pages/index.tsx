import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";

import Header from "~/components/Header/header.component";
import { api } from "~/utils/api";
import Layout from "./layout";

import { NextPageWithLayout } from "./_app";
import { Button } from "@/components/ui/button";
import Reviews from "../components/reviews";

const Home: NextPageWithLayout = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>We Fun - Your Next Experiences are here</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className=" relative mx-auto flex max-w-[90%] flex-col items-center justify-center gap-2 py-4">
        <section
          id="findMore"
          className="relative mx-auto flex justify-center rounded-full"
        >
          <div className="border-darkslategray-300 relative flex w-[300px] justify-start rounded-full border-[1px] border-solid [&>*]:px-10">
            <Button className="flex w-full justify-start rounded-full bg-transparent py-[2px] leading-[138%] tracking-[0.16em] hover:bg-gray-200 dark:hover:bg-gray-800">
              search
            </Button>
            <Link
              href="explore"
              className=" absolute end-0 flex h-full items-center rounded-full bg-black text-sm font-black leading-[140.5%] text-white dark:bg-slate-600"
            >
              <span className="uppercase">find more</span>
            </Link>
          </div>
        </section>
        <Reviews/>
      </main>
    </>
  );
};
Home.getLayout = (page: React.ReactNode) => <Layout>{page}</Layout>;
export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
